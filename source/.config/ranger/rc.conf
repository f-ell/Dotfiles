# ===================================================================
# == Options
# ===================================================================
set viewmode miller
set column_ratios 1,4,3

set colorscheme everforest
# separators, outline, both, or none
set draw_borders separators

set bidi_support false
set unicode_ellipsis true
set automatically_count_files false
set save_console_history false
set status_bar_on_top false
set draw_progress_bar_in_status_bar true

set preview_images true
set preview_images_method ueberzug
set open_all_images false

# "always", "never", "multiple"
set confirm_on_delete multiple

# hidden pattern
set hidden_filter ^\.|\.(?:pyc|pyo|swp)$|^lost\+found$|^__(py)?cache__$
set show_hidden false
set show_hidden_bookmarks true

# Use non-default path for file preview script?
#set preview_script ~/.config/ranger/scope.sh
# Use the external preview script or display simple plain text or image previews?
set use_preview_script true
set preview_files true
set preview_directories true
set collapse_preview false
set wrap_plaintext_previews true

# disabled, local (only show local info), enabled (show local and remote)
set vcs_aware true
set vcs_msg_length 30
set vcs_backend_git local
set vcs_backend_hg disabled
set vcs_backend_bzr disabled
set vcs_backend_svn disabled

set dirname_in_tabs false
set mouse_enabled true
set display_size_in_main_column false
set display_size_in_status_bar false
set display_free_space_in_status_bar false
set display_tags_in_all_columns false
set update_title false

set shorten_title 3
set hostname_in_titlebar false
set tilde_in_titlebar true

set max_history_size 10
set max_console_history_size 3

set scroll_offset 1
set flushinput true

# This allows you to click into the space to run the file.
set padding_right true

# Save bookmarks (used with mX and `X) instantly?
# This helps to synchronize bookmarks between multiple ranger
# instances but leads to *slight* performance loss.
# When false, bookmarks are saved when ranger is exited.
set autosave_bookmarks true

# Save the "`" bookmark to disk.  This can be used to switch to the last
# directory by typing "``".
set save_backtick_bookmark false

# You can display the "real" cumulative size of directories by using the
# command :get_cumulative_size or typing "dc".  The size is expensive to
# calculate and will not be updated automatically.  You can choose
# to update it automatically though by turning on this option:
set autoupdate_cumulative_size false

set show_cursor false

set sort basename
set sort_reverse false
set sort_case_insensitive true
set sort_directories_first true
set sort_unicode false

set cd_bookmarks true
set cd_tab_case sensitive
set cd_tab_fuzzy true

set preview_max_size 0

# The key hint lists up to this size have their sublists expanded.
# Otherwise the submaps are replaced with "...".
set hint_collapse_threshold 10

set show_selection_in_titlebar true

set idle_delay 2000

set metadata_deep_search false

set clear_filters_on_dir_change false

set line_numbers relative
set relative_current_zero false

set one_indexed false
set save_tabs_on_exit false
set wrap_scroll false

set global_inode_type_filter

set freeze_files false
set size_in_bytes false

# give a warning when you nest ranger in a subshell started by ranger.
# Special value "error" makes the warning more visible.
set nested_ranger_warning true

# ===================================================================
# == Local Options
# ===================================================================
# You can set local options that only affect a single directory.
#
# Examples:
# setlocal path=~/downloads sort mtime

# ===================================================================
# == Command Aliases in the Console
# ===================================================================
alias e   edit
alias q   quit
alias q!  quit!
alias qa  quitall
alias qa! quitall!

alias filter     scout -prts
alias find       scout -aets
alias mark       scout -mr
alias unmark     scout -Mr
alias search     scout -rs
alias search_inc scout -rts

# ===================================================================
# == Define keys for the browser
# ===================================================================
# Basic
map     q quit
copymap q ZZ ZQ

map R     reload_cwd
map <C-l> redraw_window
map <C-c> abort
map <esc> change_mode normal

map <cr> display_file
map <A-j> scroll_preview 0.5
map <A-k> scroll_preview -0.5
map ? help

map :  console
map !  console shell%space
map r  chain draw_possible_programs; console open_with%space
map f  console find%space
map cd console cd%space

# Line mode
map Mf linemode filename
map Mi linemode fileinfo
map Ms linemode sizemtime
map Mp linemode permissions

# Tagging / Marking
map t       tag_toggle
map ut      tag_remove
map <Space> mark_files toggle=True
map v       mark_files all=True toggle=True
map uv      mark_files all=True val=False
map V       toggle_visual_mode
map uV      toggle_visual_mode reverse=True

# Vim
copymap <UP>       k
copymap <DOWN>     j
copymap <LEFT>     h
copymap <RIGHT>    l
copymap <HOME>     gg
copymap <END>      G
copymap <PAGEDOWN> <C-F>
copymap <PAGEUP>   <C-B>

map J move down=0.5  pages=True
map K move up=0.5    pages=True
copymap J <C-D>
copymap K <C-U>

# Jumping around
map H history_go -1
map L history_go 1

map gh cd ~
map gi eval fm.cd('/run/media/' + os.getenv('USER'))
map gM cd /mnt
map gr cd /

# External Programs
map e  edit
map yp yank path
map yd yank dir
map yn yank name
map y. yank name_without_extension

# Filesystem Operations
map a rename_append
map A eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"))
map I eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7)

map pp paste
map po paste overwrite=True
map pP paste append=True
map pO paste overwrite=True append=True
map pl paste_symlink relative=False
map pL paste_symlink relative=True

map dD console delete
map dT console trash

map dd cut
map ud uncut
map da cut mode=add
map dr cut mode=remove
map dt cut mode=toggle

map yy copy
map uy uncut
map ya copy mode=add
map yr copy mode=remove
map yt copy mode=toggle

# Search
map / console search%space
map n search_next
map N search_next forward=False

# Sorting
map or set sort_reverse!
map os chain set sort=size;      set sort_reverse=False
map ob chain set sort=basename;  set sort_reverse=False
map om chain set sort=mtime;     set sort_reverse=False
map oc chain set sort=ctime;     set sort_reverse=False
map oa chain set sort=atime;     set sort_reverse=False
map ot chain set sort=type;      set sort_reverse=False
map oe chain set sort=extension; set sort_reverse=False

# Settings
map zd    set sort_directories_first!
map zh    set show_hidden!
map <C-h> set show_hidden!
copymap <C-h> <backspace>
copymap <backspace> <backspace2>
map zs    set sort_case_insensitive!

# Bookmarks
map `<any>  enter_bookmark %any
map '<any>  enter_bookmark %any
map m<any>  set_bookmark %any
map um<any> unset_bookmark %any

map     m<bg> draw_bookmarks
copymap m<bg> um<bg> `<bg> '<bg>

# ===================================================================
# == Define keys for the console
# ===================================================================
# Note: Unmapped keys are passed directly to the console.
# Basic
cmap <tab>   eval fm.ui.console.tab()
cmap <s-tab> eval fm.ui.console.tab(-1)
cmap <ESC>   eval fm.ui.console.close()
cmap <CR>    eval fm.ui.console.execute()
cmap <C-l>   redraw_window

copycmap <ESC> <C-c>
copycmap <CR>  <C-j>

# Move around
cmap <up>    eval fm.ui.console.history_move(-1)
cmap <down>  eval fm.ui.console.history_move(1)
cmap <left>  eval fm.ui.console.move(left=1)
cmap <right> eval fm.ui.console.move(right=1)

# Line Editing
cmap <backspace> eval fm.ui.console.delete(-1)
cmap <C-w>       eval fm.ui.console.delete_word()
cmap <C-k>       eval fm.ui.console.delete_rest(1)
cmap <C-u>       eval fm.ui.console.delete_rest(-1)
cmap <C-y>       eval fm.ui.console.paste()

# Note: There are multiple ways to express backspaces.  <backspace> (code 263)
# and <backspace2> (code 127).  To be sure, use both.
copycmap <backspace> <backspace2>

# This special expression allows typing in numerals:
cmap <allow_quantifiers> false

# ===================================================================
# == Pager Keybindings
# ===================================================================
# Movement
pmap  j     pager_move  down=1
pmap  k     pager_move  up=1
pmap  h     pager_move  left=4
pmap  l     pager_move  right=4
pmap  gg    pager_move  to=0
pmap  G     pager_move  to=-1
pmap  <C-f> pager_move  down=1.0  pages=True
pmap  <C-b> pager_move  up=1.0    pages=True
pmap  <C-d> pager_move  down=0.5  pages=True
pmap  <C-u> pager_move  up=0.5    pages=True

# Basic
pmap <C-l> redraw_window
pmap q     pager_close
pmap e     edit_file
